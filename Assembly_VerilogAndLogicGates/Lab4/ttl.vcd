$date
	Thu Nov 21 00:59:36 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test_bench $end
$var wire 1 ! t_g $end
$var wire 1 " t_f $end
$var wire 1 # t_e $end
$var wire 1 $ t_dp $end
$var wire 1 % t_d $end
$var wire 1 & t_c $end
$var wire 1 ' t_b $end
$var wire 1 ( t_a $end
$var reg 8 ) t_o [7:0] $end
$var reg 1 * t_w $end
$var reg 1 + t_x $end
$var reg 1 , t_y $end
$var reg 1 - t_z $end
$var integer 32 . cew_Error_Count [31:0] $end
$var integer 32 / cew_Test_Count [31:0] $end
$var integer 32 0 i [31:0] $end
$scope module cut $end
$var wire 1 & c $end
$var wire 1 * w $end
$var wire 1 + x $end
$var wire 1 , y $end
$var wire 1 - z $end
$var wire 1 ! g $end
$var wire 1 " f $end
$var wire 1 # e $end
$var wire 1 % d $end
$var wire 1 ' b $end
$var wire 1 ( a $end
$var wire 1 1 I3 $end
$var wire 1 2 I2 $end
$var wire 1 3 I1 $end
$var wire 1 4 D9_BAR $end
$var wire 1 5 D8_BAR $end
$var wire 1 6 D7_BAR $end
$var wire 1 7 D6_BAR $end
$var wire 1 8 D5_BAR $end
$var wire 1 9 D4_BAR $end
$var wire 1 : D3_BAR $end
$var wire 1 ; D2_BAR $end
$var wire 1 < D1_BAR $end
$var wire 1 = D15_BAR $end
$var wire 1 > D14_BAR $end
$var wire 1 ? D13_BAR $end
$var wire 1 @ D12_BAR $end
$var wire 1 A D11_BAR $end
$var wire 1 B D10_BAR $end
$var wire 1 C D0_BAR $end
$var reg 1 D G1_BAR $end
$var reg 1 E G2_BAR $end
$var reg 1 $ dp $end
$scope module and1_gate $end
$var wire 1 F P14 $end
$var wire 1 G P7 $end
$var wire 1 2 P9 $end
$var wire 1 6 P5 $end
$var wire 1 < P4 $end
$var wire 1 9 P2 $end
$var wire 1 : P13 $end
$var wire 1 2 P12 $end
$var wire 1 9 P10 $end
$var wire 1 < P1 $end
$var reg 1 3 P11 $end
$var reg 1 ( P3 $end
$var reg 1 2 P6 $end
$var reg 1 % P8 $end
$upscope $end
$scope module and_gate $end
$var wire 1 3 P10 $end
$var wire 1 2 P12 $end
$var wire 1 H P14 $end
$var wire 1 3 P2 $end
$var wire 1 I P7 $end
$var wire 1 1 P9 $end
$var wire 1 7 P5 $end
$var wire 1 8 P4 $end
$var wire 1 C P13 $end
$var wire 1 ; P1 $end
$var reg 1 ! P11 $end
$var reg 1 " P3 $end
$var reg 1 ' P6 $end
$var reg 1 # P8 $end
$upscope $end
$scope module decoder $end
$var wire 1 J P12 $end
$var wire 1 D P18 $end
$var wire 1 E P19 $end
$var wire 1 * P20 $end
$var wire 1 + P21 $end
$var wire 1 , P22 $end
$var wire 1 - P23 $end
$var wire 1 K P24 $end
$var reg 16 L O [1:16] $end
$var reg 1 C P1 $end
$var reg 1 4 P10 $end
$var reg 1 B P11 $end
$var reg 1 A P13 $end
$var reg 1 @ P14 $end
$var reg 1 ? P15 $end
$var reg 1 > P16 $end
$var reg 1 = P17 $end
$var reg 1 < P2 $end
$var reg 1 ; P3 $end
$var reg 1 : P4 $end
$var reg 1 9 P5 $end
$var reg 1 8 P6 $end
$var reg 1 7 P7 $end
$var reg 1 6 P8 $end
$var reg 1 5 P9 $end
$var reg 4 M control [3:0] $end
$upscope $end
$scope module three_input_and_gate $end
$var wire 1 9 P1 $end
$var wire 1 N P10 $end
$var wire 1 O P11 $end
$var wire 1 4 P13 $end
$var wire 1 P P14 $end
$var wire 1 8 P2 $end
$var wire 1 Q P3 $end
$var wire 1 R P4 $end
$var wire 1 S P5 $end
$var wire 1 T P7 $end
$var wire 1 U P9 $end
$var reg 1 1 P12 $end
$var reg 1 V P6 $end
$var reg 1 W P8 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0W
0V
0U
0T
0S
0R
0Q
1P
0O
0N
b0 M
b111111111111111 L
1K
0J
0I
1H
0G
1F
0E
0D
0C
1B
1A
1@
1?
1>
1=
1<
1;
1:
19
18
17
16
15
14
13
12
11
b0 0
b1 /
b0 .
0-
0,
0+
0*
bx )
1(
1'
1&
1%
0$
1#
1"
0!
$end
#1
0#
0"
03
0%
02
0(
0!
0<
1C
b1011111111111111 L
b1 M
1-
b10 /
b1 0
#2
1#
13
1%
1!
12
1(
0&
0;
1<
b1101111111111111 L
b10 M
0-
1,
b11 /
b10 0
#3
0#
03
0"
0:
1&
1;
b1110111111111111 L
b11 M
1-
b100 /
b11 0
#4
1"
0%
0(
01
13
09
1:
b1111011111111111 L
b100 M
0-
0,
1+
b101 /
b100 0
#5
0'
1%
1(
08
19
b1111101111111111 L
b101 M
1-
b110 /
b101 0
#6
1#
11
07
18
b1111110111111111 L
b110 M
0-
1,
b111 /
b110 0
#7
0#
0"
03
0%
0!
02
1'
06
17
b1111111011111111 L
b111 M
1-
b1000 /
b111 0
#8
1#
1"
13
1%
1!
12
05
16
b1111111101111111 L
b1000 M
0-
0,
0+
1*
b1001 /
b1000 0
#9
0#
01
04
15
b1111111110111111 L
b1001 M
1-
b1010 /
b1001 0
#10
1#
11
0!
14
0C
b111111111111111 L
b0 M
0-
0*
b1010 0
#11
0#
0"
03
0%
02
0(
0!
0<
1C
b1011111111111111 L
b1 M
1-
b1011 /
b11111100 )
#12
1#
13
1%
1!
12
1(
0&
0;
1<
b1101111111111111 L
b10 M
0-
1,
b1100 /
b1100000 )
#13
0#
03
0"
0:
1&
1;
b1110111111111111 L
b11 M
1-
b1101 /
b11011010 )
#14
1"
0%
0(
01
13
09
1:
b1111011111111111 L
b100 M
0-
0,
1+
b1110 /
b11110010 )
#15
0'
1%
1(
08
19
b1111101111111111 L
b101 M
1-
b1111 /
b1100110 )
#16
1#
11
07
18
b1111110111111111 L
b110 M
0-
1,
b10000 /
b10110110 )
#17
0#
0"
03
0%
0!
02
1'
06
17
b1111111011111111 L
b111 M
1-
b10001 /
b10111110 )
#18
1#
1"
13
1%
1!
12
05
16
b1111111101111111 L
b1000 M
0-
0,
0+
1*
b10010 /
b11100000 )
#19
0#
01
04
15
b1111111110111111 L
b1001 M
1-
b10011 /
b11111110 )
#20
b10100 /
b11110110 )
#30
